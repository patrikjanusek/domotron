@mixin paragraph-style($style) {
  @each $name, $value in $typeSizes {
      @if $style == $name {
      font-size: pow($modulator, nth($value, 1)) * $rem;
      line-height: nth($value, 2) * $lineHeight;
      margin-top: nth($value, 3) * $lineHeight;
      margin-bottom: nth($value, 4) * $lineHeight;
    }
  }
}

@mixin break-point-min($point) {
  @media screen and (min-width: #{map-get($breakPoints, $point)}px) {
    @content ;
  }
}

@mixin break-point-max($point) {
  @media screen and (max-width: #{map-get($breakPoints, $point)}px) {
    @content ;
  }
}

@mixin break-point($point, $limit: min, $dimension: width) {
  @media screen and (#{$limit}-#{$dimension}: #{map-get($breakPoints, $point)}px){
    @content ;
  }
}

@mixin box-sizing($boxSizing) {
  -moz-box-sizing: $boxSizing;
  -webkit-box-sizing: $boxSizing;
}

@mixin center($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  @else if ($horizontal) {
    left: 50%;
    transform: translate(-50%, 0);
  }
  @else if ($vertical) {
    top: 50%;
    transform: translate(0, -50%);
  }
}

@mixin border-radius($borderRadius) {
  -webkit-border-radius: $borderRadius;
  -moz-border-radius: $borderRadius;
  -ms-border-radius: $borderRadius;
  border-radius: $borderRadius;
}

@mixin border-style($borderStyle) {
   @if $borderStyle == all{
    border: 1px solid $borderColor;
  }
  @else if $borderStyle == top {
    border-top: 1px solid $borderColor;
  }
  @else if $borderStyle == bottom {
    border-bottom: 1px solid $borderColor;
  }
}

@mixin linear-gradient($gradientTop, $gradientBottom) {
  background: $gradientTop;
  /* Old browsers */
  background: -moz-linear-gradient(top, $gradientTop 0%, $gradientBottom 100%);
  /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$gradientTop), color-stop(100%,$gradientBottom));
  /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, $gradientTop 0%,$gradientBottom 100%);
  /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, $gradientTop 0%,$gradientBottom 100%);
  /* Opera 11.10+ */
  background: -ms-linear-gradient(top, $gradientTop 0%,$gradientBottom 100%);
  /* IE10+ */
  background: linear-gradient(to bottom, $gradientTop 0%,$gradientBottom 100%);
  /* W3C */
}

@mixin z-depth($zDepth) {
   @if $zDepth == 0{}
  @else if $zDepth == 1 {
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
  }
  @else if $zDepth == 2 {
    box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
  }
  @else if $zDepth == 3 {
    box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
  }
  @else if $zDepth == 4 {
    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
  }
  @else if $zDepth == 5 {
    box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
  }
}

@mixin animation($animationKeyframe, $animationTime) {
  -webkit-animation: $animationKeyframe $animationTime;
  /* Safari, Chrome and Opera > 12.1 */
  -moz-animation: $animationKeyframe $animationTime;
  /* Firefox < 16 */
  -ms-animation: $animationKeyframe $animationTime;
  /* Internet Explorer */
  -o-animation: $animationKeyframe $animationTime;
  /* Opera < 12.1 */
  animation: $animationKeyframe $animationTime;
}
